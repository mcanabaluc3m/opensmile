/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.audeering.opensmile;

public final class smileres_t {
  public final static smileres_t SMILE_SUCCESS = new smileres_t("SMILE_SUCCESS");
  public final static smileres_t SMILE_FAIL = new smileres_t("SMILE_FAIL");
  public final static smileres_t SMILE_INVALID_ARG = new smileres_t("SMILE_INVALID_ARG");
  public final static smileres_t SMILE_INVALID_STATE = new smileres_t("SMILE_INVALID_STATE");
  public final static smileres_t SMILE_COMP_NOT_FOUND = new smileres_t("SMILE_COMP_NOT_FOUND");
  public final static smileres_t SMILE_LICENSE_FAIL = new smileres_t("SMILE_LICENSE_FAIL");
  public final static smileres_t SMILE_CONFIG_PARSE_FAIL = new smileres_t("SMILE_CONFIG_PARSE_FAIL");
  public final static smileres_t SMILE_CONFIG_INIT_FAIL = new smileres_t("SMILE_CONFIG_INIT_FAIL");
  public final static smileres_t SMILE_NOT_WRITTEN = new smileres_t("SMILE_NOT_WRITTEN");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static smileres_t swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + smileres_t.class + " with value " + swigValue);
  }

  private smileres_t(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private smileres_t(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private smileres_t(String swigName, smileres_t swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static smileres_t[] swigValues = { SMILE_SUCCESS, SMILE_FAIL, SMILE_INVALID_ARG, SMILE_INVALID_STATE, SMILE_COMP_NOT_FOUND, SMILE_LICENSE_FAIL, SMILE_CONFIG_PARSE_FAIL, SMILE_CONFIG_INIT_FAIL, SMILE_NOT_WRITTEN };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

